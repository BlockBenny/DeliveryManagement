import Head from "next/head";
import { getCookie } from "cookies-next";

//Delivery status section with Preselection
const DeliveryStatusSelection = (selected: string) => {
  return (
    <select name="orderStatus" id="orderS" defaultValue={selected}>
      <option value="DELIVERED">Zugestellt</option>
      <option value="PAID">Bezahlt</option>
      <option value="PAYMENT_OPEN">Zahlung ausstehend</option>
    </select>
  );
};

//Gets called before Home is rendered (SSR) to fetch the cookies and use it's data within Home
Home.getInitialProps = ({ req, res }: any) => {
  var existingCookies = getCookie("deliveries", { req, res })?.toString();

  //Return empty props for Home
  if (!existingCookies) return {};

  var tempCokkieValue = [];
  tempCokkieValue = JSON.parse(existingCookies);
  return { deliveries: tempCokkieValue };
};

function Home(props: any) {
  return (
    <>
      <Head>
        <title>Delivery Manager</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" type="image/x-icon" href="/favicon.png"></link>
        <link rel="stylesheet" href="static.css"></link>
      </Head>
      <main>
        <div id="ehrenLogoDiv">
          <img src="/favicon.png" alt="Ehrenkind logo" width="100" height="100" />
        </div>

        {/* Form to create new Delivery Object */}
        <form className="newForm" action="./api/deliveryHandler" method="POST">
          <div className="title">Neue Lieferung eintragen</div>
          <div className="titleTwo">Liefernummer</div>
          <input name="orderNumber" required id="orderN" />
          <div className="titleTwo">Status</div>
          {DeliveryStatusSelection("")}
          <br />
          <input id="submitInput" type="submit" name="save" value="Speichern"></input>
        </form>

        {/* Start section if cookie is present and holds data*/}
        {props.deliveries && props.deliveries.length > 0 ? <div className="title">List der aktuellen Lieferungen</div> : <></>}
        {props.deliveries?.map((delivery: any, i: any) => {
          return (
            <form key={i} className="listForm" action="./api/deliveryHandler" method="POST">
              <input name="index" defaultValue={i} hidden />
              <input name="orderNumber" id="orderN" required defaultValue={delivery.orderNumber} />
              {DeliveryStatusSelection(delivery.orderStatus)}
              <input type="submit" name="update" value="Bearbeiten"></input>
              <input type="submit" name="delete" value="LÃ¶schen"></input>
            </form>
          );
        })}
      </main>
    </>
  );
}

export default Home;
